{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "13165120499241616947"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "test",
      "metadata": {
        "description": "Environment name (test or prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "southeastasia",
      "metadata": {
        "description": "Primary location for most resources"
      }
    },
    "staticWebAppLocation": {
      "type": "string",
      "defaultValue": "eastasia",
      "metadata": {
        "description": "Location for Static Web App"
      }
    },
    "databaseAdminLogin": {
      "type": "string",
      "defaultValue": "mshoaadmin",
      "metadata": {
        "description": "Database administrator login"
      }
    },
    "databaseAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "jwtSecret": {
      "type": "securestring",
      "metadata": {
        "description": "JWT secret for application authentication"
      }
    },
    "containerImageName": {
      "type": "string",
      "defaultValue": "ms-hoa-backend",
      "metadata": {
        "description": "Container image name"
      }
    },
    "containerImageTag": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Container image tag"
      }
    }
  },
  "variables": {
    "resourcePrefix": "mshoa",
    "environmentSuffix": "[if(equals(parameters('environmentName'), 'prod'), 'prod', '2025')]",
    "containerNamePrefix": "ms-hoa",
    "logAnalyticsWorkspaceName": "[format('workspace-{0}resources{1}', variables('resourcePrefix'), variables('environmentSuffix'))]",
    "storageAccountName": "[format('{0}storage{1}', variables('resourcePrefix'), variables('environmentSuffix'))]",
    "containerRegistryName": "[if(equals(parameters('environmentName'), 'prod'), format('{0}prodregistry', variables('resourcePrefix')), format('{0}registry9977', variables('resourcePrefix')))]",
    "postgresServerName": "[format('{0}postgres{1}', variables('resourcePrefix'), variables('environmentSuffix'))]",
    "containerAppsEnvName": "[format('{0}-env{1}', variables('containerNamePrefix'), if(equals(parameters('environmentName'), 'prod'), '-prod', ''))]",
    "containerAppName": "[format('{0}-backend{1}', variables('containerNamePrefix'), if(equals(parameters('environmentName'), 'prod'), '-prod', ''))]",
    "staticWebAppName": "[format('{0}frontend{1}', variables('resourcePrefix'), variables('environmentSuffix'))]"
  },
  "resources": {
    "logAnalytics": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalytics-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "6793152710046410631"
            }
          },
          "parameters": {
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics Workspace name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the workspace"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "PerGB2018",
              "metadata": {
                "description": "SKU for the workspace"
              }
            },
            "retentionInDays": {
              "type": "int",
              "defaultValue": 30,
              "metadata": {
                "description": "Data retention in days"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2023-09-01",
              "name": "[parameters('workspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('sku')]"
                },
                "retentionInDays": "[parameters('retentionInDays')]",
                "features": {
                  "enableLogAccessUsingOnlyResourcePermissions": true
                }
              }
            }
          ],
          "outputs": {
            "workspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
            },
            "workspaceName": {
              "type": "string",
              "value": "[parameters('workspaceName')]"
            },
            "customerId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), '2023-09-01').customerId]"
            }
          }
        }
      }
    },
    "storageAccount": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccount-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "15685280068973221689"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage account name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the storage account"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "metadata": {
                "description": "Storage account SKU"
              }
            },
            "kind": {
              "type": "string",
              "defaultValue": "StorageV2",
              "metadata": {
                "description": "Storage account kind"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]"
              },
              "kind": "[parameters('kind')]",
              "properties": {
                "defaultToOAuthAuthentication": false,
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 30
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'media')]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "primaryEndpoints": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints]"
            },
            "primaryBlobEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob]"
            }
          }
        }
      }
    },
    "containerRegistry": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "containerRegistry-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "registryName": {
            "value": "[variables('containerRegistryName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference('logAnalytics').outputs.workspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "16181408294754561367"
            }
          },
          "parameters": {
            "registryName": {
              "type": "string",
              "metadata": {
                "description": "Container Registry name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the registry"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Basic",
              "metadata": {
                "description": "Registry SKU"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics Workspace ID for diagnostics"
              }
            }
          },
          "resources": {
            "containerRegistry": {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-01-01-preview",
              "name": "[parameters('registryName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "properties": {
                "adminUserEnabled": true,
                "policies": {
                  "quarantinePolicy": {
                    "status": "disabled"
                  },
                  "trustPolicy": {
                    "type": "Notary",
                    "status": "disabled"
                  },
                  "retentionPolicy": {
                    "days": 7,
                    "status": "disabled"
                  },
                  "exportPolicy": {
                    "status": "enabled"
                  }
                },
                "encryption": {
                  "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices"
              }
            },
            "diagnosticSettings": {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('registryName'))]",
              "name": "[format('{0}-diagnostics', parameters('registryName'))]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ]
              },
              "dependsOn": [
                "containerRegistry"
              ]
            }
          },
          "outputs": {
            "registryId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
            },
            "registryName": {
              "type": "string",
              "value": "[parameters('registryName')]"
            },
            "loginServer": {
              "type": "string",
              "value": "[reference('containerRegistry').loginServer]"
            },
            "adminUsername": {
              "type": "string",
              "value": "[listCredentials('containerRegistry', '2023-01-01-preview').username]"
            }
          }
        }
      },
      "dependsOn": [
        "logAnalytics"
      ]
    },
    "postgresql": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "postgresql-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "serverName": {
            "value": "[variables('postgresServerName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "administratorLogin": {
            "value": "[parameters('databaseAdminLogin')]"
          },
          "administratorPassword": {
            "value": "[parameters('databaseAdminPassword')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference('logAnalytics').outputs.workspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "4895359938940028461"
            }
          },
          "parameters": {
            "serverName": {
              "type": "string",
              "metadata": {
                "description": "PostgreSQL server name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the server"
              }
            },
            "administratorLogin": {
              "type": "string",
              "metadata": {
                "description": "Database administrator login"
              }
            },
            "administratorPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Database administrator password"
              }
            },
            "version": {
              "type": "string",
              "defaultValue": "15",
              "metadata": {
                "description": "PostgreSQL version"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard_B1ms",
              "metadata": {
                "description": "Server SKU name"
              }
            },
            "tier": {
              "type": "string",
              "defaultValue": "Burstable",
              "metadata": {
                "description": "Server tier"
              }
            },
            "storageSizeGB": {
              "type": "int",
              "defaultValue": 32,
              "metadata": {
                "description": "Storage size in GB"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics Workspace ID for diagnostics"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2023-03-01-preview",
              "name": "[parameters('serverName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('tier')]"
              },
              "properties": {
                "version": "[parameters('version')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorPassword')]",
                "storage": {
                  "storageSizeGB": "[parameters('storageSizeGB')]"
                },
                "backup": {
                  "backupRetentionDays": 7,
                  "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                  "mode": "Disabled"
                },
                "maintenanceWindow": {
                  "customWindow": "Disabled",
                  "dayOfWeek": 0,
                  "startHour": 0,
                  "startMinute": 0
                }
              }
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', parameters('serverName'), 'AllowAzureServices')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', parameters('serverName'), 'AllowAll')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', parameters('serverName'), 'mshoaapp')]",
              "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DBforPostgreSQL/flexibleServers/{0}', parameters('serverName'))]",
              "name": "[format('{0}-diagnostics', parameters('serverName'))]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
              ]
            }
          ],
          "outputs": {
            "serverId": {
              "type": "string",
              "value": "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
            },
            "serverName": {
              "type": "string",
              "value": "[parameters('serverName')]"
            },
            "serverFqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName')), '2023-03-01-preview').fullyQualifiedDomainName]"
            },
            "databaseName": {
              "type": "string",
              "value": "mshoaapp"
            }
          }
        }
      },
      "dependsOn": [
        "logAnalytics"
      ]
    },
    "containerAppsEnvironment": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "containerAppsEnv-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environmentName": {
            "value": "[variables('containerAppsEnvName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference('logAnalytics').outputs.workspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "11933474714791979651"
            }
          },
          "parameters": {
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Container Apps Environment name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the environment"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics Workspace ID for diagnostics"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2023-05-01",
              "name": "[parameters('environmentName')]",
              "location": "[parameters('location')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', last(split(parameters('logAnalyticsWorkspaceId'), '/'))), '2023-09-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', last(split(parameters('logAnalyticsWorkspaceId'), '/'))), '2023-09-01').primarySharedKey]"
                  }
                },
                "workloadProfiles": [
                  {
                    "name": "Consumption",
                    "workloadProfileType": "Consumption"
                  }
                ]
              }
            }
          ],
          "outputs": {
            "environmentId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]"
            },
            "environmentName": {
              "type": "string",
              "value": "[parameters('environmentName')]"
            },
            "defaultDomain": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('environmentName')), '2023-05-01').defaultDomain]"
            }
          }
        }
      },
      "dependsOn": [
        "logAnalytics"
      ]
    },
    "containerApp": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "containerApp-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerAppName": {
            "value": "[variables('containerAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "environmentId": {
            "value": "[reference('containerAppsEnvironment').outputs.environmentId.value]"
          },
          "containerRegistryName": {
            "value": "[variables('containerRegistryName')]"
          },
          "containerImageName": {
            "value": "[parameters('containerImageName')]"
          },
          "containerImageTag": {
            "value": "[parameters('containerImageTag')]"
          },
          "postgresServerName": {
            "value": "[variables('postgresServerName')]"
          },
          "databaseAdminLogin": {
            "value": "[parameters('databaseAdminLogin')]"
          },
          "databaseAdminPassword": {
            "value": "[parameters('databaseAdminPassword')]"
          },
          "jwtSecret": {
            "value": "[parameters('jwtSecret')]"
          },
          "staticWebAppUrl": {
            "value": "[reference('staticWebApp').outputs.defaultHostName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "4030246108535257911"
            }
          },
          "parameters": {
            "containerAppName": {
              "type": "string",
              "metadata": {
                "description": "Container App name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the container app"
              }
            },
            "environmentId": {
              "type": "string",
              "metadata": {
                "description": "Container Apps Environment ID"
              }
            },
            "containerRegistryName": {
              "type": "string",
              "metadata": {
                "description": "Container Registry name"
              }
            },
            "containerImageName": {
              "type": "string",
              "metadata": {
                "description": "Container image name"
              }
            },
            "containerImageTag": {
              "type": "string",
              "defaultValue": "latest",
              "metadata": {
                "description": "Container image tag"
              }
            },
            "postgresServerName": {
              "type": "string",
              "metadata": {
                "description": "PostgreSQL server name"
              }
            },
            "databaseAdminLogin": {
              "type": "string",
              "metadata": {
                "description": "Database administrator login"
              }
            },
            "databaseAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Database administrator password"
              }
            },
            "jwtSecret": {
              "type": "securestring",
              "metadata": {
                "description": "JWT secret"
              }
            },
            "staticWebAppUrl": {
              "type": "string",
              "metadata": {
                "description": "Static Web App URL"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2023-05-01",
              "name": "[parameters('containerAppName')]",
              "location": "[parameters('location')]",
              "properties": {
                "managedEnvironmentId": "[parameters('environmentId')]",
                "configuration": {
                  "secrets": [
                    {
                      "name": "database-password",
                      "value": "[parameters('databaseAdminPassword')]"
                    },
                    {
                      "name": "jwt-secret",
                      "value": "[parameters('jwtSecret')]"
                    },
                    {
                      "name": "registry-password",
                      "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-01-01-preview').passwords[0].value]"
                    }
                  ],
                  "registries": [
                    {
                      "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-01-01-preview').loginServer]",
                      "username": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-01-01-preview').username]",
                      "passwordSecretRef": "registry-password"
                    }
                  ],
                  "ingress": {
                    "external": true,
                    "targetPort": 8080,
                    "transport": "Auto",
                    "traffic": [
                      {
                        "weight": 100,
                        "latestRevision": true
                      }
                    ]
                  }
                },
                "template": {
                  "containers": [
                    {
                      "image": "[format('{0}/{1}:{2}', reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-01-01-preview').loginServer, parameters('containerImageName'), parameters('containerImageTag'))]",
                      "name": "[parameters('containerImageName')]",
                      "env": [
                        {
                          "name": "NODE_ENV",
                          "value": "production"
                        },
                        {
                          "name": "PORT",
                          "value": "8080"
                        },
                        {
                          "name": "DATABASE_URL",
                          "value": "[format('postgresql://{0}:{1}@{2}.postgres.database.azure.com/postgres?sslmode=require', parameters('databaseAdminLogin'), parameters('databaseAdminPassword'), parameters('postgresServerName'))]"
                        },
                        {
                          "name": "JWT_SECRET",
                          "secretRef": "jwt-secret"
                        },
                        {
                          "name": "JWT_EXPIRE",
                          "value": "24h"
                        },
                        {
                          "name": "FRONTEND_URL",
                          "value": "[format('https://{0}', parameters('staticWebAppUrl'))]"
                        }
                      ],
                      "resources": {
                        "cpu": "[json('0.5')]",
                        "memory": "1Gi"
                      }
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 3,
                    "rules": [
                      {
                        "name": "http-scale",
                        "http": {
                          "metadata": {
                            "concurrentRequests": "100"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "outputs": {
            "containerAppId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/containerApps', parameters('containerAppName'))]"
            },
            "containerAppName": {
              "type": "string",
              "value": "[parameters('containerAppName')]"
            },
            "applicationUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2023-05-01').configuration.ingress.fqdn]"
            },
            "latestRevisionName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2023-05-01').latestRevisionName]"
            }
          }
        }
      },
      "dependsOn": [
        "containerAppsEnvironment",
        "containerRegistry",
        "postgresql",
        "staticWebApp"
      ]
    },
    "staticWebApp": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "staticWebApp-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "staticWebAppName": {
            "value": "[variables('staticWebAppName')]"
          },
          "location": {
            "value": "[parameters('staticWebAppLocation')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference('logAnalytics').outputs.workspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "17512069307873028103"
            }
          },
          "parameters": {
            "staticWebAppName": {
              "type": "string",
              "metadata": {
                "description": "Static Web App name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "eastasia",
              "metadata": {
                "description": "Location for the Static Web App"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics Workspace ID for monitoring"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/staticSites",
              "apiVersion": "2022-09-01",
              "name": "[parameters('staticWebAppName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Free",
                "tier": "Free"
              },
              "properties": {
                "repositoryUrl": null,
                "branch": null,
                "allowConfigFileUpdates": true,
                "enterpriseGradeCdnStatus": "Disabled"
              }
            }
          ],
          "outputs": {
            "staticWebAppId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName'))]"
            },
            "staticWebAppName": {
              "type": "string",
              "value": "[parameters('staticWebAppName')]"
            },
            "defaultHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName')), '2022-09-01').defaultHostname]"
            },
            "repositoryUrl": {
              "type": "string",
              "value": "[coalesce(reference(resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName')), '2022-09-01').repositoryUrl, '')]"
            },
            "branch": {
              "type": "string",
              "value": "[coalesce(reference(resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName')), '2022-09-01').branch, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "logAnalytics"
      ]
    }
  },
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "containerRegistryLoginServer": {
      "type": "string",
      "value": "[reference('containerRegistry').outputs.loginServer.value]"
    },
    "containerAppUrl": {
      "type": "string",
      "value": "[reference('containerApp').outputs.applicationUrl.value]"
    },
    "staticWebAppUrl": {
      "type": "string",
      "value": "[reference('staticWebApp').outputs.defaultHostName.value]"
    },
    "postgresServerFqdn": {
      "type": "string",
      "value": "[reference('postgresql').outputs.serverFqdn.value]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "value": "[reference('logAnalytics').outputs.workspaceId.value]"
    }
  }
}