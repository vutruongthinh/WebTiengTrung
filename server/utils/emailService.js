const nodemailer = require('nodemailer');
const crypto = require('crypto');

// Email transporter configuration
const createTransporter = () => {
    return nodemailer.createTransporter({
        host: process.env.SMTP_HOST,
        port: process.env.SMTP_PORT,
        secure: false, // true for 465, false for other ports
        auth: {
            user: process.env.SMTP_USER,
            pass: process.env.SMTP_PASS
        }
    });
};

// Generate verification token
const generateVerificationToken = () => {
    return crypto.randomBytes(32).toString('hex');
};

// Send email verification
const sendVerificationEmail = async (user, token) => {
    const transporter = createTransporter();
    
    const verificationUrl = `${process.env.FRONTEND_URL}/verify-email?token=${token}&email=${encodeURIComponent(user.email)}`;
    
    const mailOptions = {
        from: {
            name: 'Ms. Hoa - Trung t√¢m ti·∫øng Trung',
            address: process.env.SMTP_USER
        },
        to: user.email,
        subject: 'X√°c nh·∫≠n ƒë·ªãa ch·ªâ email - Ms. Hoa Chinese Learning',
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
                <div style="text-align: center; margin-bottom: 30px;">
                    <h1 style="color: #c41e3a; margin-bottom: 10px;">Ms. Hoa ÂçéËÄÅÂ∏à</h1>
                    <p style="color: #666; font-size: 16px;">Trung t√¢m h·ªçc ti·∫øng Trung chuy√™n nghi·ªáp</p>
                </div>
                
                <div style="background: #f8f9fa; padding: 30px; border-radius: 10px; margin-bottom: 30px;">
                    <h2 style="color: #333; margin-bottom: 20px;">Ch√†o m·ª´ng ${user.full_name}!</h2>
                    <p style="color: #666; font-size: 16px; line-height: 1.6; margin-bottom: 25px;">
                        C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i Ms. Hoa Chinese Learning Platform. 
                        ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng x√°c nh·∫≠n ƒë·ªãa ch·ªâ email c·ªßa b·∫°n.
                    </p>
                    
                    <div style="text-align: center;">
                        <a href="${verificationUrl}" 
                           style="background: #c41e3a; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold; display: inline-block;">
                            X√°c nh·∫≠n Email
                        </a>
                    </div>
                </div>
                
                <div style="border-top: 1px solid #eee; padding-top: 20px;">
                    <p style="color: #999; font-size: 14px; margin-bottom: 10px;">
                        N·∫øu b·∫°n kh√¥ng th·ªÉ nh·∫•p v√†o n√∫t tr√™n, h√£y sao ch√©p v√† d√°n li√™n k·∫øt sau v√†o tr√¨nh duy·ªát:
                    </p>
                    <p style="color: #666; font-size: 14px; word-break: break-all;">
                        ${verificationUrl}
                    </p>
                </div>
                
                <div style="margin-top: 30px; text-align: center; color: #999; font-size: 12px;">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                    <p>¬© 2025 Ms. Hoa Chinese Learning Platform</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
        console.log(`Verification email sent to ${user.email}`);
        return true;
    } catch (error) {
        console.error('Error sending verification email:', error);
        throw new Error('Kh√¥ng th·ªÉ g·ª≠i email x√°c nh·∫≠n');
    }
};

// Send password reset email
const sendPasswordResetEmail = async (user, token) => {
    const transporter = createTransporter();
    
    const resetUrl = `${process.env.FRONTEND_URL}/reset-password?token=${token}&email=${encodeURIComponent(user.email)}`;
    
    const mailOptions = {
        from: {
            name: 'Ms. Hoa - Trung t√¢m ti·∫øng Trung',
            address: process.env.SMTP_USER
        },
        to: user.email,
        subject: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - Ms. Hoa Chinese Learning',
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
                <div style="text-align: center; margin-bottom: 30px;">
                    <h1 style="color: #c41e3a; margin-bottom: 10px;">Ms. Hoa ÂçéËÄÅÂ∏à</h1>
                    <p style="color: #666; font-size: 16px;">Trung t√¢m h·ªçc ti·∫øng Trung chuy√™n nghi·ªáp</p>
                </div>
                
                <div style="background: #f8f9fa; padding: 30px; border-radius: 10px; margin-bottom: 30px;">
                    <h2 style="color: #333; margin-bottom: 20px;">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
                    <p style="color: #666; font-size: 16px; line-height: 1.6; margin-bottom: 25px;">
                        Ch√†o ${user.full_name},<br><br>
                        Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n. 
                        Nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ t·∫°o m·∫≠t kh·∫©u m·ªõi.
                    </p>
                    
                    <div style="text-align: center;">
                        <a href="${resetUrl}" 
                           style="background: #c41e3a; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold; display: inline-block;">
                            ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
                        </a>
                    </div>
                    
                    <p style="color: #e74c3c; font-size: 14px; margin-top: 20px; padding: 15px; background: #fdf2f2; border-radius: 5px;">
                        ‚ö†Ô∏è Li√™n k·∫øt n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù v√¨ l√Ω do b·∫£o m·∫≠t.
                    </p>
                </div>
                
                <div style="border-top: 1px solid #eee; padding-top: 20px;">
                    <p style="color: #999; font-size: 14px; margin-bottom: 10px;">
                        N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.
                    </p>
                    <p style="color: #666; font-size: 14px; word-break: break-all;">
                        Li√™n k·∫øt ƒë·∫∑t l·∫°i: ${resetUrl}
                    </p>
                </div>
                
                <div style="margin-top: 30px; text-align: center; color: #999; font-size: 12px;">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                    <p>¬© 2025 Ms. Hoa Chinese Learning Platform</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
        console.log(`Password reset email sent to ${user.email}`);
        return true;
    } catch (error) {
        console.error('Error sending password reset email:', error);
        throw new Error('Kh√¥ng th·ªÉ g·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u');
    }
};

// Send welcome email (after email verification)
const sendWelcomeEmail = async (user) => {
    const transporter = createTransporter();
    
    const mailOptions = {
        from: {
            name: 'Ms. Hoa - Trung t√¢m ti·∫øng Trung',
            address: process.env.SMTP_USER
        },
        to: user.email,
        subject: 'Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Ms. Hoa Chinese Learning!',
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
                <div style="text-align: center; margin-bottom: 30px;">
                    <h1 style="color: #c41e3a; margin-bottom: 10px;">Ms. Hoa ÂçéËÄÅÂ∏à</h1>
                    <p style="color: #666; font-size: 16px;">Trung t√¢m h·ªçc ti·∫øng Trung chuy√™n nghi·ªáp</p>
                </div>
                
                <div style="background: #f8f9fa; padding: 30px; border-radius: 10px; margin-bottom: 30px;">
                    <h2 style="color: #333; margin-bottom: 20px;">Ch√†o m·ª´ng ${user.full_name}!</h2>
                    <p style="color: #666; font-size: 16px; line-height: 1.6; margin-bottom: 25px;">
                        T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n th√†nh c√¥ng! B·∫°n ƒë√£ s·∫µn s√†ng b·∫Øt ƒë·∫ßu h√†nh tr√¨nh h·ªçc ti·∫øng Trung c√πng Ms. Hoa.
                    </p>
                    
                    <div style="background: white; padding: 20px; border-radius: 8px; margin: 20px 0;">
                        <h3 style="color: #c41e3a; margin-bottom: 15px;">üéØ B·∫Øt ƒë·∫ßu h·ªçc ngay:</h3>
                        <ul style="color: #666; line-height: 1.8;">
                            <li>Kh√°m ph√° c√°c kh√≥a h·ªçc mi·ªÖn ph√≠</li>
                            <li>N√¢ng c·∫•p VIP ƒë·ªÉ truy c·∫≠p to√†n b·ªô n·ªôi dung</li>
                            <li>Theo d√µi ti·∫øn ƒë·ªô h·ªçc t·∫≠p c·ªßa b·∫°n</li>
                            <li>Nh·∫≠n ch·ª©ng ch·ªâ ho√†n th√†nh kh√≥a h·ªçc</li>
                        </ul>
                    </div>
                    
                    <div style="text-align: center;">
                        <a href="${process.env.FRONTEND_URL}/courses" 
                           style="background: #c41e3a; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold; display: inline-block;">
                            Kh√°m ph√° kh√≥a h·ªçc
                        </a>
                    </div>
                </div>
                
                <div style="margin-top: 30px; text-align: center; color: #999; font-size: 12px;">
                    <p>Ch√∫c b·∫°n h·ªçc t·∫≠p hi·ªáu qu·∫£!</p>
                    <p>¬© 2025 Ms. Hoa Chinese Learning Platform</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
        console.log(`Welcome email sent to ${user.email}`);
        return true;
    } catch (error) {
        console.error('Error sending welcome email:', error);
        // Don't throw error for welcome email as it's not critical
        return false;
    }
};

module.exports = {
    generateVerificationToken,
    sendVerificationEmail,
    sendPasswordResetEmail,
    sendWelcomeEmail
};
